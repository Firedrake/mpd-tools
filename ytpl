#! /usr/bin/perl

use strict;
use warnings;

use Net::MPD;
use Getopt::Std;
use LWP::Simple;
use JSON;

my %o=(h => $ENV{MPD_HOST} || 'localhost', # mpdhost
       p => $ENV{MPD_PORT} || '6600',      # mpdport
       d => '/mnt/storage/audio',          # path to mpd root
       w => 'Youtube-Cache',    # working directory within mpd root
       t => 300,                # refresh threshold
         );

getopts('h:p:d:w:t:',\%o);

umask 022;

mkdir $o{d}.'/'.$o{w};
chdir $o{d}.'/'.$o{w};

my $mpd=Net::MPD->connect("$o{h}:$o{p}") or die "no connect";

my @ytid;

foreach my $url (@ARGV) {
  if ($url =~ /melodice/) {
    my $d=get($url);
    if ($d =~ /video_ids=([-_A-Za-z0-9,]+)/) {
      push @ytid,split ',',$1;
    }
  } elsif ($url =~ /youtube.*playlist.*list=/) {
    open I,'-|','youtube-dl','-j',$url;
    while (<I>) {
      push @ytid,decode_json($_)->{display_id};
    }
    close I;
  } elsif ($url =~ /youtube.*v=([-_A-Za-z0-9]+)/) {
    push @ytid,$1;
  } else {
    push @ytid,$url;
  }
}

print join(' ',@ytid),"\n";
unless (@ytid) {
  die "Specify at least one melodice/YouTube playlist URL, YouTube video URL, or YouTube video ID\n";
}

my %cache;

{
  opendir D,$o{d}.'/'.$o{w};
  foreach my $file (grep /Youtube_/,readdir D) {
    $file =~ /Youtube_([-_A-Za-z0-9]+)\.[A-Za-z0-9]*$/;
    $cache{$1}=$file;
  }
  closedir D;
}

my @yy=@ytid;

while (1) {
  while (@yy) {
    my $timeleft=0;
    my $s=$mpd->update_status;
    my $pull=1;
    if ($s->{state} ne 'stop') {
      $pull=0;
      my @p=$mpd->playlist_info;
      my %pi=map {$p[$_]{Id} => $_} (0..$#p);
      $timeleft=$s->{duration}-$s->{elapsed}; # time already played current track
      if ($s->{nextsongid}) {
        map {$timeleft+=$p[$_]{duration}} ($pi{$s->{nextsongid}}..$#p)
      }
      if ($timeleft <= $o{t}) {
        $pull=1;
      }
    }
    if ($pull) {
      my $id=shift @yy;
      unless (exists $cache{$id}) {
        my @cmd=qw(youtube-dl -q -x --no-check-certificate -o %(title)s.%(uploader_id)s.%(extractor_key)s_%(id)s.%(ext)s);
        system(@cmd,"https://youtube.com/watch?v=$id");
        opendir D,$o{d}.'/'.$o{w};
        foreach my $file (grep /Youtube_$id/,readdir D) {
          $cache{$id}=$file;
          $s=$mpd->update_status;
          while ($s->{updating_db}) {
            $mpd->idle('update');
            $s=$mpd->update_status;
          }
          $mpd->update($o{w}.'/'.$cache{$id});
        }
        closedir D;
      }
      $s=$mpd->update_status;
      while ($s->{updating_db}) {
        $mpd->idle('update');
        $s=$mpd->update_status;
      }
      $mpd->add($o{w}.'/'.$cache{$id});
      if ($s->{state} eq 'stop') {
        $mpd->play;
      }
    }
    if ($timeleft >= $o{t}) {
      sleep 10;
    }
  }
  push @yy,@ytid;
}
