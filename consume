#! /usr/bin/perl

use strict;
use warnings;

use Net::MPD;
use Getopt::Std;
use List::Util qw(shuffle min max first);
use Encode qw(decode);

my %own;

my %o=(h => $ENV{MPD_HOST} || 'localhost', # mpdhost
       p => $ENV{MPD_PORT} || '6600',      # mpdport
       c => 3,                      # consume history
         );

getopts('h:p:c:',\%o);

my $mpd=Net::MPD->connect("$o{h}:$o{p}") or die "no connect";
$mpd->random(0);

while (1) {
  my $status=$mpd->update_status;
  if ($status->{state} ne 'stop') {
    my @p=$mpd->playlist_info;
    my %pi=map {$p[$_]{Id} => $_} (0..$#p);
    splice @p,$pi{$status->{songid}};
    if (scalar @p > $o{c}) {
      splice @p,-$o{c};
      map {$mpd->delete_id($_->{Id})} @p;
    }
  }
  $mpd->idle(qw(playlist player));
}
